/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* universal selector */
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

/* set for rem mobile-friendly */
/* 1 rem = 10px; */
/* 10/16 = 62.5% */
/* For users who adjust browser defaults */
html {
    font-size: 62.5%;
}

/* always put font in body selector */
/* inherited in all child elements */
body {
    font-family: 'Lato', sans-serif;
    font-weight: 400;
    /* font-size: 16px; */
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    font-size: 1.6rem;
    box-sizing: border-box;
}

.header {
    /* 95% of viewport height */
    height: 95vh;
    background-image:   linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 133, 0.8)), 
        url('../img/hero.jpg');
    background-size: cover;
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%)
}

.logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.logo {
    height: 3.5rem;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* translates based on actual element, so 50% of element itself */
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* determines if back part of element is visible */
    backface-visibility: hidden;

    margin-bottom: 6rem;
}

.heading-primary-main {
    display: block;
    font-size: 6rem;
    font-weight: 700;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

.heading-primary-sub {
    display: block;
    font-size: 2rem;
    font-weight: 400;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
    /* animation-iteration-count: 3; */
    /* animation-delay: 3s; */
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem);
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        translate: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem);
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        translate: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    100% {
        opacity: 1;
        translate: translate(0);
    }
}

/* psuedoclass: state of button selector */
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    /* has to be on initial state */
    transition: all .2s;
    /* for the after psuedo element */
    position: relative;
}

.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
    /* relative to initial state */
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn-white {
    background-color: #fff;
    color: #777;
}

/* pseudo element */
.btn::after {
    /* have to specify or won't appear */
    content: "";
    display: inline-block;
    /* same dimensions as original */
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    /* puts element behind original */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn-white::after {
    background-color: #fff;
}

/* after psuedo element only on hovering over it */
.btn:hover::after {
    /* appears double size was before */
    transform: scaleX(1.4) scaleY(1.6);
    /* fades out */
    opacity: 0;
}

.btn-animated {
    animation: moveInBottom 0.5s ease-out .75s;
    /* automatically apply styles before animation starts */
    animation-fill-mode: backwards;
}